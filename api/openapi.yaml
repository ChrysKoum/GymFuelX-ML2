openapi: 3.0.0
info:
  title: GYMFUELX API
  description: This is GYMFUELX API
  contact:
    name: Team 27
    email: info@gymfuelx.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 2.0.0
# servers:
# - url: https://virtserver.swaggerhub.com/DIMOSKOMPITSELIDIS/Team27/2.0.0
#   description: SwaggerHub API Auto Mocking
tags:
  - name: exercise-user
    description: user actions on exercises
  - name: user-user
    description: user actions on his details
  - name: recipe-user
    description: user actions on recipes
  - name: report-user
    description: user actions on reports
  - name: dietprogram-user
    description: user actions on his diet program
  - name: gymprogram-user
    description: user actions on his gym program
  - name: report-nutritionist
    description: nutritionist actions on reports
  - name: recipe-nutritionist
    description: nutritionist actions on recipes
  - name: report-trainer
    description: trainer actions on reports
paths:
  /user/{userID}/dietprogram:
    get:
      tags:
        - dietprogram-user
      summary: Get user's diet program
      description: |
        <ΛΑ-2>
          Ο χρήστης πρέπει να μπορεί να λαμβάνει προγράμματα γυμναστικής και πρόγραμμα διατροφής βασισμένα σε προσωπικές πληροφορίες.
      operationId: getDietProgram
      parameters:
        - name: userID
          in: path
          description: The user's ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: Successfully received Diet Program
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DietProgram"
        "400":
          description: Bad input parameter
        "404":
          description: Diet Program not found
      x-swagger-router-controller: DietprogramUser
  /user/{userID}/gymprogram/{excerciseID}:
    get:
      tags:
        - exercise-user
      summary: Get a specific excercise's details
      description:
        "<ΛΑ-4>\n  Ο χρήστης θα πρέπει να μπορεί να δει πληροφορίες για\
        \ κάθε άσκηση γυμναστικής \n"
      operationId: getExcercise
      parameters:
        - name: userID
          in: path
          description: The user's ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
        - name: excerciseID
          in: path
          description: The ID of the excercise
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: Successfully received excercise's details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Exercise"
        "400":
          description: Bad input parameter
        "404":
          description: Gym Program not found
      x-swagger-router-controller: ExerciseUser
  /user/{userID}:
    get:
      tags:
        - user-user
      summary: Get a user's details
      description: |
        <ΛΑ-11>
          Ο χρήστης πρέπει να μπορεί να επεξεργάζεται τις προσωπικές πληροφορίες στο προφίλ του.
      operationId: getUserDetails
      parameters:
        - name: userID
          in: path
          description: The user's ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: Successfully received user's details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Bad input parameter
        "404":
          description: User not found
      x-swagger-router-controller: UserUser
    put:
      tags:
        - user-user
      summary: Edit details to user's profile
      description: |
        <ΛΑ-11>
          Ο χρήστης πρέπει να μπορεί να επεξεργάζεται τις προσωπικές πληροφορίες στο προφίλ του.
      operationId: editUserDetails
      parameters:
        - name: userID
          in: path
          description: The user's ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/user_userID_body"
        required: true
      responses:
        "200":
          description: Succesfully edited profile details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Bad input parameter
        "404":
          description: User not found
      x-swagger-router-controller: UserUser
  /user:
    post:
      tags:
        - user-user
      summary: Add details to user's profile
      description:
        "<ΛΑ-10>\n  Ο χρήστης πρέπει να μπορεί να προσθέτει προσωπικές\
        \ πληροφορίες στο προφίλ του \n"
      operationId: addUserDetails
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_body'
        required: true
      responses:
        "200":
          description: Successfully added profile details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Bad input parameter
        "404":
          description: User not found
      x-swagger-router-controller: UserUser
  /user/{userID}/recipe:
    get:
      tags:
        - recipe-user
      summary: Get the list of all the Recipies
      description: |
        <ΛΑ-1>
          O χρήστης πρέπει να μπορεί να αναζητά συνταγές και προγράμματα γυμναστικής
      operationId: getAllRecipies
      parameters:
        - name: userID
          in: path
          description: the user's ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AllRecipe"
        "400":
          description: Bad input parameter
        "404":
          description: Recipe not found
      x-swagger-router-controller: RecipeUser
  /user/{userID}/gymprogram:
    get:
      tags:
        - gymprogram-user
      summary: Get a customized gym program
      description: |
        <ΛΑ-2>
          Ο χρήστης πρέπει να μπορεί να λαμβάνει προγράμματα γυμναστικής και πρόγραμμα διατροφής βασισμένα σε προσωπικές πληροφορίες.
      operationId: getGymProgram
      parameters:
        - name: userID
          in: path
          description: the user's ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GymProgram"
        "400":
          description: Bad input parameter
        "404":
          description: Gym Program not found
      x-swagger-router-controller: GymprogramUser
    post:
      tags:
        - report-user
      summary: Create a report to this gymprogram
      description: |
        <ΛΑ-6> Ο χρήστης θα πρέπει να μπορεί να κάνει αναφορά σε προγράμματα γυμναστικής για τυχόν λάθη ή δυσαρέσκεια.
      operationId: createGymReport
      parameters:
      - name: userID
        in: path
        description: the User's ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userID_gymprogram_body'
        required: true
      responses:
        "200":
          description: Operation successful
        "400":
          description: Bad input parameter
        "404":
          description: Gym Program not found
      x-swagger-router-controller: ReportUser
  /user/{userID}/recipe/{recipeID}:
    get:
      tags:
        - recipe-user
      summary: Get a specific recipe's details
      description: |
        <ΛΑ-3>
          O χρήστης πρέπει να μπορεί να δει τις θρεπτικές λεπτομέρειες για κάθε συνταγή
      operationId: getRecipe
      parameters:
        - name: userID
          in: path
          description: the user's ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
        - name: recipeID
          in: path
          description: The ID of the recipe
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: Successfully received recipe's details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Recipe"
        "400":
          description: Bad input parameter
        "404":
          description: Recipe not found
      x-swagger-router-controller: RecipeUser
    post:
      tags:
        - report-user
      summary: Create a report to this recipe
      description: |
        <ΛΑ-5> Ο χρήστης θα πρέπει να μπορεί να κάνει αναφορά σε συνταγές για τυχόν λάθη
      operationId: createDietReport
      parameters:
      - name: userID
        in: path
        description: the User's ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: recipeID
        in: path
        description: the recipe's ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/recipe_recipeID_body'
        required: true
      responses:
        "200":
          description: Operation successful
        "400":
          description: Bad input parameter
        "404":
          description: Recipe not found
      x-swagger-router-controller: ReportUser
  /trainer/{trainerID}/report:
    get:
      tags:
        - report-trainer
      summary: Get gym program reports
      description: |
        <ΛΑ-7>
          Ο γυμναστής θα πρέπει να έχει την δυνατότητα να βλέπει και να διορθώνει τα προγράμματα γυμναστικής από τυχόν λάθη
      operationId: getGymProgramReports
      parameters:
      - name: trainerID
        in: path
        description: The trainer Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AllReport"
        "400":
          description: Bad input parameter
        "404":
          description: Gym Program Reports not found
      x-swagger-router-controller: ReportTrainer
  /trainer/{trainerID}/report/{reportID}:
    get:
      tags:
        - report-trainer
      summary: Get gym program report
      description: |
        <ΛΑ-7>
          Ο γυμναστής θα πρέπει να έχει την δυνατότητα να βλέπει και να διορθώνει τα προγράμματα γυμναστικής από τυχόν λάθη
      operationId: getGymProgramReport
      parameters:
        - name: trainerID
          in: path
          description: The trainer ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
        - name: reportID
          in: path
          description: The report ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Report"
        "400":
          description: Bad input parameter
        "404":
          description: Gym Program Report not found
      x-swagger-router-controller: ReportTrainer
    put:
      tags:
        - report-trainer
      summary: Update/Correct fitness program report
      description: |
        <ΛΑ-7>
          Ο γυμναστής θα πρέπει να έχει την δυνατότητα να βλέπει και να διορθώνει τα προγράμματα γυμναστικής από τυχόν λάθη
      operationId: updateReport
      parameters:
      - name: trainerID
        in: path
        description: The trainer
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: reportID
        in: path
        description: The report ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/report_reportID_body'
        required: true
      responses:
        "200":
          description: Successful Gym Program Report is updated
        "400":
          description: Bad input parameter
        "404":
          description: Gym Program Report not found
      x-swagger-router-controller: ReportTrainer
    delete:
      tags:
        - report-trainer
      summary: Get gym program reports
      description: |
        <ΛΑ-7>
          Ο γυμναστής θα πρέπει να έχει την δυνατότητα να βλέπει και να διορθώνει τα προγράμματα γυμναστικής από τυχόν λάθη
      operationId: deleteReport
      parameters:
        - name: trainerID
          in: path
          description: The trainer ID that deletes the gym program
          required: true
          style: simple
          explode: false
          schema:
            type: integer
        - name: reportID
          in: path
          description: The ID of the report that is being deleted.
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: Successful Gym Program Report is deleted
        "400":
          description: Bad input parameter
        "404":
          description: Gym Program Report not found
      x-swagger-router-controller: ReportTrainer
  /nutritionist/{NutritionistID}/recipe:
    post:
      tags:
        - recipe-nutritionist
      summary: Add a new recipe
      description: |
        <ΛΑ-8>
          Ο διατροφολόγος πρέπει να μπορεί να διαχειρίζεται τις συνταγές.
      operationId: addRecipe
      parameters:
        - name: NutritionistID
          in: path
          description: The nutritionist's ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NutritionistID_recipe_body"
        required: true
      responses:
        "200":
          description: Recipe successfully added
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Recipe"
        "400":
          description: Bad input parameter
        "404":
          description: Recipes not found
      x-swagger-router-controller: RecipeNutritionist
  /nutritionist/{NutritionistID}/recipe/{recipeID}:
    get:
      tags:
        - recipe-nutritionist
      summary: Get recipe
      description: |
        <ΛΑ-8>
          Ο διατροφολόγος πρέπει να μπορεί να διαχειρίζεται τις συνταγές.
      operationId: getRecipeNutrionist
      parameters:
        - name: NutritionistID
          in: path
          description: The nutritionist ID that see the recipe.
          required: true
          style: simple
          explode: false
          schema:
            type: integer
        - name: recipeID
          in: path
          description: The ID of the recipe .
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Recipe"
        "400":
          description: Bad input parameter
        "404":
          description: Recipe not found
      x-swagger-router-controller: RecipeNutritionist
    put:
      tags:
        - recipe-nutritionist
      summary: Update/Correct recipe
      description: |
        <ΛΑ-8>
          Ο διατροφολόγος πρέπει να μπορεί να διαχειρίζεται τις συνταγές.
      operationId: updateRecipeNutritionist
      parameters:
        - name: NutritionistID
          in: path
          description: The nutritionist ID that update the recipe report
          required: true
          style: simple
          explode: false
          schema:
            type: integer
        - name: recipeID
          in: path
          description: The ID of the recipe that is being updated.
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/recipe_recipeID_body_1'
        required: true
      responses:
        "200":
          description: Successful Recipe is updated
        "400":
          description: Bad input parameter
        "404":
          description: Recipe not found
      x-swagger-router-controller: RecipeNutritionist
    delete:
      tags:
        - recipe-nutritionist
      summary: Delete recipe
      description: |
        <ΛΑ-9>
          Ο διατροφολόγος πρέπει να μπορεί να βλέπει τις αναφορές που γίνονται από τους χρήστες στις συνταγές.
      operationId: deleteRecipe
      parameters:
        - name: NutritionistID
          in: path
          description: The nutritionist ID that delete the recipe
          required: true
          style: simple
          explode: false
          schema:
            type: integer
        - name: recipeID
          in: path
          description: The ID of the recipe that is being deleted.
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: Successful Recipe is deleted
        "400":
          description: Bad input parameter
        "404":
          description: Recipe not found
      x-swagger-router-controller: RecipeNutritionist
  /nutritionist/{NutritionistID}/report:
    get:
      tags:
        - report-nutritionist
      summary: Get recipe reports
      description: |
        <ΛΑ-9>
          Ο διατροφολόγος πρέπει να μπορεί να βλέπει τις αναφορές που γίνονται από τους χρήστες στις συνταγές.
      operationId: getRecipeReports
      parameters:
        - name: NutritionistID
          in: path
          description: The nutritionist ID that see the recipe reports
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AllReport"
        "400":
          description: Bad input parameter
        "404":
          description: Reports not found
      x-swagger-router-controller: ReportNutritionist
  /nutritionist/{NutritionistID}/report/{reportID}:
    get:
      tags:
        - report-nutritionist
      summary: Get recipe report
      description: |
        <ΛΑ-9>
          Ο διατροφολόγος πρέπει να μπορεί να βλέπει τις αναφορές που γίνονται από τους χρήστες στις συνταγές.
      operationId: getRecipeReport
      parameters:
        - name: NutritionistID
          in: path
          description: The nutritionist ID that see the recipe report
          required: true
          style: simple
          explode: false
          schema:
            type: integer
        - name: reportID
          in: path
          description: The ID of the recipe report.
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Report"
        "400":
          description: Bad input parameter
        "404":
          description: Report not found
      x-swagger-router-controller: ReportNutritionist
    put:
      tags:
        - report-nutritionist
      summary: Update/Correct recipe report
      description: |
        <ΛΑ-9>
          Ο διατροφολόγος πρέπει να μπορεί να βλέπει τις αναφορές που γίνονται από τους χρήστες στις συνταγές.
      operationId: updateRecipeReport
      parameters:
        - name: NutritionistID
          in: path
          description: The nutritionist ID that update the recipe report
          required: true
          style: simple
          explode: false
          schema:
            type: integer
        - name: reportID
          in: path
          description: The ID of the recipe report that is being updated.
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/report_reportID_body'
        required: true
      responses:
        "200":
          description: Successful Recipe Report is updated
        "400":
          description: Bad input parameter
        "404":
          description: Recipe Report not found
      x-swagger-router-controller: ReportNutritionist
    delete:
      tags:
        - report-nutritionist
      summary: delete recipe report
      description: |
        <ΛΑ-9>
          Ο διατροφολόγος πρέπει να μπορεί να βλέπει τις αναφορές που γίνονται από τους χρήστες στις συνταγές.
      operationId: deleteRecipeReport
      parameters:
        - name: NutritionistID
          in: path
          description: The nutritionist ID that delete the recipe report
          required: true
          style: simple
          explode: false
          schema:
            type: integer
        - name: reportID
          in: path
          description: The ID of the recipe report that is being deleted.
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        "200":
          description: Successful Recipe Report is deleted
        "400":
          description: Bad input parameter
        "404":
          description: Recipe Report not found
      x-swagger-router-controller: ReportNutritionist
components:
  schemas:
    User:
      type: object
      properties:
        userID:
          type: integer
        username:
          type: string
        birthday:
          type: string
          format: date-time
        gender:
          type: string
        height:
          type: number
        weight:
          type: number
        meal:
          type: string
        allergies:
          type: string
        restrictions:
          type: string
        level:
          type: string
        goal:
          type: string
      example:
        birthday: 2000-01-23T04:56:07.000+00:00
        meal: meal
        allergies: allergies
        goal: goal
        gender: gender
        level: level
        weight: 1.46581298050294517310021547018550336360931396484375
        restrictions: restrictions
        userID: 0
        username: username
        height: 6.02745618307040320615897144307382404804229736328125
      xml:
        name: User
    Recipe:
      type: object
      properties:
        recipeID:
          type: integer
        recipeType:
          type: string
        imgRecipe:
          type: string
        Instructions:
          type: array
          items:
            type: string
        IngredientsName:
          type: array
          items:
            type: string
        NutritionalTable:
          type: array
          items:
            type: string
        IngredientsQuantity:
          type: array
          items:
            type: string
        time:
          type: integer
        difficulty:
          type: string
        servings:
          type: string
      example:
        IngredientsName:
          - IngredientsName
          - IngredientsName
        difficulty: difficulty
        servings: servings
        recipeType: recipeType
        Instructions:
          - Instructions
          - Instructions
        NutritionalTable:
          - NutritionalTable
          - NutritionalTable
        IngredientsQuantity:
          - IngredientsQuantity
          - IngredientsQuantity
        time: 6
        recipeID: 0
        imgRecipe: imgRecipe
      xml:
        name: Recipe
    AllRecipe:
      type: array
      items:
        $ref: "#/components/schemas/Recipe"
    Report:
      type: object
      properties:
        isGym-Diet:
          type: boolean
        ID:
          type: integer
        ByUser:
          type: integer
      example:
        ByUser: 6
        ID: 0
        isGym-Diet: true
      xml:
        name: Recipe
    GymProgram:
      type: object
      properties:
        GymProgramDetails:
          type: array
          items:
            $ref: "#/components/schemas/Exercise"
        gymProgramID:
          type: integer
      example:
        GymProgramDetails:
          - exerciseDescription: exerciseDescription
            explanationVideo: explanationVideo
            exerciseID: 0
            exerciseTitle: exerciseTitle
          - exerciseDescription: exerciseDescription
            explanationVideo: explanationVideo
            exerciseID: 0
            exerciseTitle: exerciseTitle
        gymProgramID: 0
      xml:
        name: GymProgram
    AllReport:
      type: array
      items:
        $ref: "#/components/schemas/Report"
    Exercise:
      type: object
      properties:
        exerciseID:
          type: integer
        exerciseTitle:
          type: string
        exerciseDescription:
          type: string
        explanationVideo:
          type: string
      example:
        exerciseDescription: exerciseDescription
        explanationVideo: explanationVideo
        exerciseID: 0
        exerciseTitle: exerciseTitle
      xml:
        name: Exercise
    DietProgram:
      type: object
      properties:
        dayDietProgramIDs:
          type: array
          items:
            type: array
            items:
              type: integer
        recipeIDs:
          type: array
          items:
            type: integer
        dietProgramID:
          type: integer
      example:
        dayDietProgramIDs:
          - - 0
            - 0
          - - 0
            - 0
        recipeIDs:
          - 6
          - 6
        dietProgramID: 1
      xml:
        name: DietProgram
    user_userID_body:
      type: object
      properties:
        height:
          type: number
          description: The user's height
        weight:
          type: number
          description: The user's weight
        meal:
          type: string
          description: The user's meal preferences
        allergies:
          type: string
          description: The user's allergies
        restrictions:
          type: string
          description: The user's dietary restrictions
        level:
          type: string
          description: The user's workout level
        goal:
          type: string
          description: The user's fitness goal
    user_body:
      type: object
      properties:
        username:
          type: string
          description: The user's username
        birthday:
          type: string
          description: The user's birthday
          format: date-time
        gender:
          type: string
          description: The user's gender
        height:
          type: number
          description: The user's height
        weight:
          type: number
          description: The user's weight
        meal:
          type: string
          description: The user's meal preferences
        allergies:
          type: string
          description: The user's allergies
        restrictions:
          type: string
          description: The user's dietary restrictions
        level:
          type: string
          description: The user's workout level
        goal:
          type: string
          description: The user's fitness goal
    userID_gymprogram_body:
      type: object
      properties:
        isGym-Diet:
          type: boolean
        ID:
          type: integer
        ByUser:
          type: integer
    recipe_recipeID_body:
      type: object
      properties:
        isGym-Diet:
          type: boolean
        ID:
          type: integer
        ByUser:
          type: integer
    report_reportID_body:
      type: object
      properties:
        ID:
          type: string
        details:
          type: string
    NutritionistID_recipe_body:
      type: object
      properties:
        recipeType:
          type: string
          description: The recipe type
        imgRecipe:
          type: string
          description: The image of the recipe
        Instructions:
          type: array
          description: The instructions of the recipe
          items:
            type: string
        IngredientsName:
          type: array
          description: The ingredients name of the recipe.
          items:
            type: string
        NutritionalTable:
          type: array
          description: The NutritionalTable of the recipe.
          items:
            type: string
        IngredientsQuantity:
          type: array
          description: The IngredientsQuantity of the recipe.
          items:
            type: string
        time:
          type: integer
          description: The time that will be needed for the recipe to  be completed.
        difficulty:
          type: string
          description: The difficulty of the recipe.
        servings:
          type: string
          description: The servings that the recipe can produce.
    recipe_recipeID_body_1:
      type: object
      properties:
        recipeType:
          type: string
          description: The recipe type
        imgRecipe:
          type: string
          description: The image of the recipe
        Instructions:
          type: array
          description: The instructions of the recipe
          items:
            type: string
        IngredientsName:
          type: array
          description: The ingredients Name of the recipe.
          items:
            type: string
        NutritionalTable:
          type: array
          description: The NutritionalTable of the recipe.
          items:
            type: string
        IngredientsQuantity:
          type: array
          description: The IngredientsQuantity of the recipe.
          items:
            type: string
        time:
          type: integer
          description: The time that will be needed for the recipe to be completed.
        difficulty:
          type: string
          description: The difficulty of the recipe.
        servings:
          type: string
          description: The servings that the recipe can produce.
  requestBodies:
    User:
      description: User model
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/User"
      required: true
